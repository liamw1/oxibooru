# Example Docker Compose configuration
#
# Use this as a template to set up docker compose, or as guide to set up other
# orchestration services
services:
  server:
    image: oxibooru/server:0.4.0
    build:
      context: server
      args: 
        # Setting this to `native` can give small performance gains for some 
        # operations such as reverse search, but makes binary less portable.
        # Leave blank to let Rust determine the target CPU. 
        TARGET_CPU:
    depends_on:
      - sql
    environment:
      # These should be the names of the dependent containers listed below,
      # or FQDNs/IP addresses if these services are running outside of Docker
      POSTGRES_HOST: sql
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
      POSTGRES_PORT:
    volumes:
      - "${MOUNT_DATA}:/data"
      - "./server/config.toml:/opt/app/config.toml"
    stop_signal: SIGINT

  client:
    image: oxibooru/client:0.4.0
    build: client
    depends_on:
      - server
    environment:
      BACKEND_HOST: server
      BASE_URL:
    volumes:
      - "${MOUNT_DATA}:/data:ro"
    ports:
      - "${PORT}:80"

  sql:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
    volumes:
      - "${MOUNT_SQL}:/var/lib/postgresql/data"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
